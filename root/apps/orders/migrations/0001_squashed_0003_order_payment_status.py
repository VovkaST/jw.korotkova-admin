# Generated by Django 5.1.5 on 2025-04-29 11:05

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("orders", "0001_initial"),
        ("orders", "0002_orderitem_discounted_price_alter_orderitem_product_and_more"),
        ("orders", "0003_order_payment_status"),
    ]

    initial = True

    dependencies = [
        ("products", "0002_product_category_alter_product_type"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_comment="Creation date and time",
                        verbose_name="Creation date and time",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        db_comment="Update date and time",
                        verbose_name="Update date and time",
                    ),
                ),
                ("guid", models.UUIDField(default=uuid.uuid4, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("MAKING_JEWELRY", "Making jewelry"),
                            ("SALE", "Sale"),
                        ],
                        db_comment="Order category",
                        max_length=50,
                        verbose_name="Category",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NEW", "New"),
                            ("IN_PROCESS", "In process"),
                            ("PAYMENT_AWAIT", "Waiting for payment"),
                            ("DELIVERY", "Delivered"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Canceled"),
                        ],
                        db_comment="Order status",
                        default="NEW",
                        max_length=50,
                        verbose_name="Order status",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        db_comment="Percent of discount",
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Percent of discount",
                    ),
                ),
                (
                    "total_sum",
                    models.DecimalField(
                        db_comment="Total order sum",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total order sum",
                    ),
                ),
                (
                    "discount_sum",
                    models.DecimalField(
                        db_comment="Sum of discount",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sum of discount",
                    ),
                ),
                (
                    "discounted_sum",
                    models.DecimalField(
                        db_comment="Sum with discount",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sum with discount",
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PICKUP", "Pickup"),
                            ("YANDEX", "Yandex"),
                            ("RUSSIAN_POST", "Russian Post"),
                            ("CDEK", "CDEK"),
                        ],
                        db_comment="Delivery method",
                        max_length=50,
                        null=True,
                        verbose_name="Delivery method",
                    ),
                ),
                (
                    "delivery_address",
                    models.CharField(
                        blank=True,
                        db_comment="Delivery address",
                        max_length=255,
                        null=True,
                        verbose_name="Delivery address",
                    ),
                ),
                (
                    "note",
                    models.CharField(blank=True, db_comment="Note", null=True, verbose_name="Note"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_client",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Client",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("NOT_PAID", "Not paid"),
                            ("PARTIALLY_PAID", "Partially paid"),
                            ("PAID", "Paid"),
                        ],
                        db_comment="Payment status",
                        default="NOT_PAID",
                        max_length=50,
                        verbose_name="Payment status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "db_table": "jw_order",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_comment="Creation date and time",
                        verbose_name="Creation date and time",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        db_comment="Update date and time",
                        verbose_name="Update date and time",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        db_comment="Quantity of item in order",
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Item quantity",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_comment="Order item price",
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Item price",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        db_comment="Percent of discount",
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Percent of discount",
                    ),
                ),
                (
                    "total_sum",
                    models.DecimalField(
                        db_comment="Total order sum",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total order sum",
                    ),
                ),
                (
                    "discount_sum",
                    models.DecimalField(
                        db_comment="Sum of discount",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sum of discount",
                    ),
                ),
                (
                    "discounted_sum",
                    models.DecimalField(
                        db_comment="Sum with discount",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sum with discount",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="orders.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "discounted_price",
                    models.DecimalField(
                        db_comment="Item price with discount",
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Item price with discount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order item",
                "verbose_name_plural": "Order items",
                "db_table": "jw_order_item",
            },
        ),
        migrations.CreateModel(
            name="OrderPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_comment="Creation date and time",
                        verbose_name="Creation date and time",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        db_comment="Update date and time",
                        verbose_name="Update date and time",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PREPAYMENT", "Prepayment"),
                            ("PARTIAL_PAYMENT", "Partial payment"),
                            ("FULL_PAYMENT", "Full payment"),
                            ("REFUND", "Refund"),
                        ],
                        db_comment="Payment type",
                        max_length=50,
                        verbose_name="Type",
                    ),
                ),
                (
                    "sum",
                    models.DecimalField(
                        db_comment="Payment sum",
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Payment sum",
                    ),
                ),
                (
                    "note",
                    models.CharField(blank=True, db_comment="Note", null=True, verbose_name="Note"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_payments",
                        to="orders.order",
                        verbose_name="Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "db_table": "jw_order_payment",
            },
        ),
    ]

# Generated by Django 5.0.1 on 2024-02-28 19:57

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("app_clients", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "guid",
                    models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_comment="Creation date and time",
                        verbose_name="Creation date and time",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        db_comment="Update date and time",
                        verbose_name="Update date and time",
                    ),
                ),
                (
                    "total_sum",
                    models.DecimalField(
                        db_comment="Total order sum",
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total order sum",
                    ),
                ),
                (
                    "discount_sum",
                    models.DecimalField(
                        db_comment="Sum of discount",
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sum of discount",
                    ),
                ),
                (
                    "discounted_sum",
                    models.DecimalField(
                        db_comment="Sum with discount",
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Discounted sum",
                    ),
                ),
                (
                    "tax_percent",
                    models.IntegerField(
                        db_comment="Tax percent",
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Tax percent",
                    ),
                ),
                (
                    "tax_sum",
                    models.DecimalField(
                        db_comment="Tax sum",
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Tax sum",
                    ),
                ),
                (
                    "client_guid",
                    models.ForeignKey(
                        db_column="client_guid",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_client",
                        to="app_clients.client",
                        verbose_name="Client GUID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Порядок",
                "verbose_name_plural": "Orders",
                "db_table": "jw_order",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_comment="Creation date and time",
                        verbose_name="Creation date and time",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        db_comment="Update date and time",
                        verbose_name="Update date and time",
                    ),
                ),
                (
                    "item_name",
                    models.CharField(db_comment="Item name", max_length=255, verbose_name="Item name"),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_comment="Order item price",
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Item price",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        db_comment="Quantity of item in order",
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Item quantity",
                    ),
                ),
                (
                    "total_sum",
                    models.DecimalField(
                        db_comment="Total item sum",
                        decimal_places=2,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total item sum",
                    ),
                ),
                (
                    "discount_percent",
                    models.IntegerField(
                        db_comment="Discount percent",
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Discount percent",
                    ),
                ),
                (
                    "discounted_price",
                    models.DecimalField(
                        db_comment="Price of item with discount",
                        decimal_places=2,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Discounted price of item",
                    ),
                ),
                (
                    "discount_sum",
                    models.DecimalField(
                        db_comment="Sum of item discount",
                        decimal_places=2,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sum of item discount",
                    ),
                ),
                (
                    "discounted_sum",
                    models.DecimalField(
                        db_comment="Item's sum with discount",
                        decimal_places=2,
                        editable=False,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Discounted item sum",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="app_orders.order",
                        verbose_name="Parent order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order item",
                "verbose_name_plural": "Order items",
                "db_table": "jw_order_item",
            },
        ),
    ]

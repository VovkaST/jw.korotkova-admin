services:
  postgres:
    image: postgres:15.2-bullseye
    container_name: korotkova-postgres
    hostname: postgres
    networks:
      - korotkova-network
    ports:
      - "5432:5432"
    volumes:
      - /opt/korotkova/pgdata:/var/lib/postgresql/data
      - ./initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  redis:
    image: redis:latest
    container_name: korotkova-redis
    networks:
      - korotkova-network
    ports:
      - "6379:6379"
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  service_base: &service_base
    image: korotkova-admin-python-3.11:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
    networks:
      - korotkova-network
    working_dir: /app
    env_file:
      - .env
    environment:
      - TZ=Europe/Moscow
      - DJANGO_SETTINGS_MODULE=root.settings.production
      - PYTHONUNBUFFERED=1

  admin:
    <<: *service_base
    container_name: korotkova-admin
    ports:
      - "8000:8000"
    entrypoint: ./compose/admin/entrypoint.sh
    volumes:
      - ./:/app
      - ./static:/app/static
      - ./media:/app/media

  bot:
    <<: *service_base
    container_name: korotkova-bot
    depends_on:
      admin:
        condition: service_started
    entrypoint: ./compose/bot/entrypoint.sh

  celery:
    <<: *service_base
    container_name: korotkova-celery
    depends_on:
      admin:
        condition: service_started
    entrypoint: ./compose/celery/entrypoint.sh

  assets:
    image: node:22.14
    container_name: korotkova-assets
    ports:
      - "8080:8080"
    volumes:
      - ./root/assets:/root/assets
      - ./static:/static
    working_dir: /root/assets/
    command: bash -c "npm i && npm run preview"

networks:
  korotkova-network:
    driver: bridge
